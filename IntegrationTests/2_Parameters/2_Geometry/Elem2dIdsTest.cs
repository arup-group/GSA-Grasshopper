using System.IO;
using System.Reflection;

using Grasshopper.Kernel;

using Xunit;

namespace IntegrationTests.Parameters {
  [Collection("GrasshopperFixture collection")]
  public class Elem2dIdsTest {
    public static GH_Document Document => document ?? (document = OpenDocument());
    private static GH_Document document = null;

    [Fact]
    public void NoRuntimeErrorTest() {
      Helper.TestNoRuntimeMessagesInDocument(Document, GH_RuntimeMessageLevel.Error);
    }

    [Theory]
    [InlineData("IDs", new int[] {
      99227,
99228,
99229,
99230,
99263,
99264,
99265,
99266,
99267,
99268,
99269,
99270,
99271,
99272,
99273,
99274,
99275,
99276,
99277,
99278,
99279,
99280,
99281,
99282,
99283,
99284,
99285,
99286,
99287,
99288,
99289,
99290,
99291,
99292,
99293,
99294,
99295,
99296,
99297,
99298,
99299,
99300,
99301,
99302,
99303,
99304,
99305,
99308,
99311,
99655,
99687,
99688,
99701,
99702,
99715,
99717,
99719,
99727,
99728,
99730,
99749,
99750,
99770,
99794,
99795,
99798,
99799,
99820,
99835,
99841,
99855,
99863,
99868,
99869,
99876,
99889,
99903,
99904,
99910,
99937,
99958,
99967,
99980,
99982,
99986,
99994,
100014,
100017,
100043,
100058,
100059,
100065,
100077,
100089,
100095,
100110,
100111,
100114,
100139,
100180,
100181,
100189,
100192,
100193,
100195,
100196,
100197,
100212,
100213,
100228,
100229,
100252,
100253,
100254,
100267,
100279,
100280,
100293,
100294,
100302,
100315,
100327,
100340,
100346,
100352,
100353,
100361,
100389,
100421,
100426,
100430,
100436,
100440,
100479,
100492,
100493,
100534,
100539,
100540,
100557,
100558,
100560,
100561,
100572,
100573,
100579,
100596,
100637,
100640,
100646,
100648,
100652,
100655,
100656,
100667,
100671,
100672,
100682,
100683,
100698,
100701,
100726,
100729,
100739,
100771,
100772,
100807,
100817,
100827,
100831,
100833,
100835,
100843,
100855,
100862,
107006,
107007,
107008,
107009,
107013,
107014,
107015,
107016,
107017,
107018,
107019,
107020,
107021,
107022,
107023,
107024,
107025,
107026,
107027,
107028,
107029,
107030,
107031,
107032,
107033,
107034,
107035,
107036,
107037,
107038,
107039,
107040,
107041,
107042,
107043,
107452,
107454,
107455,
107456,
107457,
107458,
107459,
107460,
107461,
107462,
107463,
107464,
107465,
107466,
107467,
107468,
107469,
107470,
107471,
107472,
107473,
107474,
107475,
107476,
107477,
107478,
107479,
107480,
107481,
107482,
107483,
107484,
107485,
107486,
107502,
107560,
107578,
107585,
107587,
107590,
107591,
107600,
107612,
107616,
107622,
107626,
107631,
107632,
107664,
107669,
107674,
107678,
107699,
107729,
107747,
107778,
107779,
107840,
107846,
107876,
107887,
107890,
107892,
107893,
107902,
107904,
107907,
107909,
107915,
107919,
107957,
107978,
107984,
107999,
108022,
108024,
108028,
108041,
108075,
108095,
108108,
108138,
108139,
108140,
108141,
108152,
108153,
108154,
108155,
108156,
108157,
108158,
108159,
108160,
108161,
108162,
108163,
108543,
108544,
108545,
108546,
108548,
108549,
108550,
108551,
108552,
108553,
108554,
108555,
108556,
108557,
108558,
108559,
108560,
108561,
108562,
108563,
108564,
108565,
108566,
108567,
108568,
108569,
108570,
108571,
108572,
108573,
108574,
108575,
108576,
108577,
108578,
108579,
108600,
108605,
108606,
108607,
108611,
108615,
108628,
108643,
108655,
108664,
108669,
108678,
108680,
108698,
108710,
108713,
108723,
108724,
108726,
108734,
108775,
108789,
108810,
108813,
108823,
108855,
108864,
108870,
108878,
108891,
108895,
108896,
108902,
108903,
108931,
108932,
108933,
108945,
108947,
108952,
108962,
108968,
108972,
108974,
108978,
108985,
108993,
109019,
109037,
109038,
109048,
109052,
109062,
109126,
109130,
109139,
109140,
109142,
109152,
109162,
109174,
109178,
109188,
109189,
109262,
109263,
109300,
113523,
113524,
113576,
113577,
113578,
113579,
113580,
113581,
113582,
113583,
113584,
113585,
113586,
113587,
113588,
113589,
113590,
113591,
113592,
113593,
113594,
113595,
113596,
113597,
113598,
113599,
113600,
113601,
113602,
113603,
113604,
113605,
113606,
113607,
113608,
113609,
113610,
113611,
113612,
113613,
113614,
113615,
113616,
113617,
113618,
113619,
113620,
113622,
113976,
113978,
113979,
113983,
113984,
113986,
114002,
114017,
114023,
114024,
114025,
114058,
114077,
114092,
114099,
114100,
114110,
114112,
114127,
114133,
114204,
114209,
114238,
114239,
114265,
114286,
114312,
114315,
114322,
114323,
114324,
114325,
114328,
114331,
114351,
114359,
114360,
114361,
114388,
114395,
114396,
114402,
114415,
114420,
114424,
114428,
114446,
114453,
114454,
114467,
114468,
114469,
114470,
114484,
114505,
114512,
114521,
114523,
114540,
114541,
114550,
114564,
114575,
114576,
114606,
114607,
114613,
114616,
114631,
114640,
114655,
114661,
114669,
114680,
114686,
114693,
114696,
114699,
114709,
114724,
114729,
114758,
114769,
114779,
114795,
114796,
114802,
114806,
114810,
114812,
114819,
114829,
114836,
114839,
114889,
114891,
114895,
114914,
114915,
114916,
114945,
    })]
    public void Test(string groupIdentifier, object expected) {
      IGH_Param param = Helper.FindParameter(Document, groupIdentifier);
      Helper.TestGhPrimitives(param, expected);
    }

    private static GH_Document OpenDocument() {
      string fileName = MethodBase.GetCurrentMethod().DeclaringType + ".gh";
      fileName = fileName.Replace("IntegrationTests.Parameters.", string.Empty);
      fileName = fileName.Replace("Test", string.Empty);

      string solutiondir = Directory.GetParent(Directory.GetCurrentDirectory()).Parent.Parent.Parent
       .Parent.FullName;
      string path = Path.Combine(new string[] {
        solutiondir,
        "ExampleFiles",
        "Parameters",
        "2_Geometry",
      });

      return Helper.CreateDocument(Path.Combine(path, fileName));
    }
  }
}
