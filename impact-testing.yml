trigger:
  branches:
    include:
      - 'release/*'

variables:
  - group: s3PushInstallers
  - group: pipeline-tokens

stages:
- stage: CheckRepoChanges
  displayName: 'Check Repository Changes'
  jobs:
  - job: CheckChanges
    displayName: 'Check for Changes in GsaGH and IntegrationTests'
    pool:
      vmImage: 'windows-latest'
    steps:

    # - checkout: none

    - powershell: |
        Write-Output "Minimal checkout of repository...Branch= $(System.PullRequest.SourceBranch)"
        # git clone --filter=blob:none --branch $(System.PullRequest.SourceBranch)
      displayName: 'Minimal Checkout'
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

    - powershell: |
        Write-Output "Checking for changes in GsaGH/** and IntegrationTests/**..."
        git fetch origin
        $gitChanges = git diff --name-only HEAD~1 HEAD
        $unitTestsChanged = $false
        $integrationTestsChanged = $false

        foreach ($file in $gitChanges) {
          if ($file -like 'GsaGH/*') {
            $unitTestsChanged = $true
          }
          if ($file -like 'IntegrationTests/*') {
            $integrationTestsChanged = $true
          }
        }

        Write-Output "Setting pipeline variables based on changes detected..."
        if ($unitTestsChanged) {
          Write-Output "UnitTests=True"
          echo "##vso[task.setvariable variable=UnitTests]true"
        }
        if ($integrationTestsChanged) {
          Write-Output "Integration=True"
          echo "##vso[task.setvariable variable=Integration]true"
        }
      displayName: 'Detect Changes in Repo'

- stage: ImpactTestingUnit
  displayName: 'Impact Testing (Unit)'
  dependsOn: CheckRepoChanges
  condition: eq(variables['UnitTests'], 'true')
  jobs:
  - job: UnitTests
    displayName: 'Run Unit Tests'
    pool:
      vmImage: 'windows-latest'
    steps:
    - powershell: |
        Write-Output "Running Unit Tests..."
      displayName: 'Run Unit Tests'

- stage: ImpactTestingIntegration
  displayName: 'Impact Testing (Integration)'
  dependsOn: CheckRepoChanges
  condition: eq(variables['Integration'], 'true')
  jobs:
  - job: IntegrationTests
    displayName: 'Run Integration Tests'
    pool:
      vmImage: 'windows-latest'
    steps:
    - powershell: |
        Write-Output "Running Integration Tests..."
      displayName: 'Run Integration Tests'
